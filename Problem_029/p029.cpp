/*
 * Solution to Project Euler problem 29 - Distinct powers
 * by IlhanSeven
 
 * https://github.com/IlhanSeven/projectEuler
 * 
 * PROBLEM: How many distinct terms are in the sequence generated by a^b for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 */

/* ALGORITHM: The wise thing in this solution is to use unordered set which is a container that store unique elements in no particular order.

Output:   9183

real	0m0.012s
user	0m0.008s
sys	0m0.002s

on MacBook Pro 2015 i5
*/

#include <iostream>
#include "math.h"
#include <unordered_set> // for distinct terms container.

using namespace std;


double rounded(double n, int p) {
  int tmp = pow(10, p);
  return round(tmp * n) / tmp;
}

int main() {
  int max = 100;
  unordered_set<double> sequence;
  for (int i = 2; i <= max; ++i)
    for (int j = 2; j <= max; ++j)
      sequence.insert(rounded(log(i) * j, 8));

  std::cout << sequence.size();
  return 0;
}